<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cqut.beautiful.dao.UserDao">

    <resultMap type="com.cqut.beautiful.entity.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="openid" column="openid" jdbcType="VARCHAR"/>
        <result property="imageurl" column="imageurl" jdbcType="VARCHAR"/>
        <result property="sessionkey" column="sessionkey" jdbcType="VARCHAR"/>
        <result property="token" column="token" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="systoken" column="sysToken" jdbcType="VARCHAR"/>
    </resultMap>

    <!--根据openid查询单个用户-->
    <select id="queryUserByOpenid" resultMap="UserMap">
        select
          id, nickname, openid, imageurl, sessionkey, token, username, phone, `password`, sysToken
        from `user`
        where openid = #{openid}
    </select>

    <!--根据id查询单个用户-->
    <select id="queryUserById" resultMap="UserMap">
        select
          id, nickname, openid, imageurl, sessionkey, token, username, phone, `password`, sysToken
        from `user`
        where id = #{id}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into user(nickname, openid, imageurl, sessionkey, token, username, phone, password, sysToken)
        values (#{nickname}, #{openid}, #{imageurl}, #{sessionkey}, #{token}, #{username}, #{phone}, #{password}, #{systoken})
    </insert>

    <!--查询所有openid-->
    <select id="queryOpenidByOpenid" resultMap="UserMap">
        select
          openid
        from `user`
        where openid = #{openid}
    </select>




    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserMap">
        select
        id, nickname, openid, imageurl, sessionkey, token, username, phone, password, sysToken
        from user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="nickname != null and nickname != ''">
                and nickname = #{nickname}
            </if>
            <if test="openid != null and openid != ''">
                and openid = #{openid}
            </if>
            <if test="imageurl != null and imageurl != ''">
                and imageurl = #{imageurl}
            </if>
            <if test="sessionkey != null and sessionkey != ''">
                and sessionkey = #{sessionkey}
            </if>
            <if test="token != null and token != ''">
                and token = #{token}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="systoken != null and systoken != ''">
                and sysToken = #{systoken}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="nickname != null and nickname != ''">
                and nickname = #{nickname}
            </if>
            <if test="openid != null and openid != ''">
                and openid = #{openid}
            </if>
            <if test="imageurl != null and imageurl != ''">
                and imageurl = #{imageurl}
            </if>
            <if test="sessionkey != null and sessionkey != ''">
                and sessionkey = #{sessionkey}
            </if>
            <if test="token != null and token != ''">
                and token = #{token}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="systoken != null and systoken != ''">
                and sysToken = #{systoken}
            </if>
        </where>
    </select>



    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(nickname, openid, imageurl, sessionkey, token, username, phone, password, sysToken)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.nickname}, #{entity.openid}, #{entity.imageurl}, #{entity.sessionkey}, #{entity.token},
            #{entity.username}, #{entity.phone}, #{entity.password}, #{entity.systoken})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(nickname, openid, imageurl, sessionkey, token, username, phone, password, sysToken)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.nickname}, #{entity.openid}, #{entity.imageurl}, #{entity.sessionkey}, #{entity.token},
            #{entity.username}, #{entity.phone}, #{entity.password}, #{entity.systoken})
        </foreach>
        on duplicate key update
        nickname = values(nickname),
        openid = values(openid),
        imageurl = values(imageurl),
        sessionkey = values(sessionkey),
        token = values(token),
        username = values(username),
        phone = values(phone),
        password = values(password),
        sysToken = values(sysToken)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update user
        <set>
            <if test="nickname != null and nickname != ''">
                nickname = #{nickname},
            </if>
            <if test="openid != null and openid != ''">
                openid = #{openid},
            </if>
            <if test="imageurl != null and imageurl != ''">
                imageurl = #{imageurl},
            </if>
            <if test="sessionkey != null and sessionkey != ''">
                sessionkey = #{sessionkey},
            </if>
            <if test="token != null and token != ''">
                token = #{token},
            </if>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="systoken != null and systoken != ''">
                sysToken = #{systoken},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from user where id = #{id}
    </delete>

</mapper>

